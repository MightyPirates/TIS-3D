buildscript {
    repositories {
        jcenter()
        maven {
            name = 'Fabric'
            url = 'https://maven.fabricmc.net/'
        }
        gradlePluginPortal()
    }
    dependencies {
        classpath "net.fabricmc:fabric-loom:0.2.7-SNAPSHOT"
    }
}

plugins {
    id "com.matthewprenger.cursegradle" version "1.1.2"
}

apply plugin: 'fabric-loom'
apply plugin: 'java'
apply plugin: 'maven-publish'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

file "build.properties" withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

version = config.mod.version
group = config.mod.group
archivesBaseName = config.mod.name

def getGitRef() {
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-parse', '--short', 'HEAD'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    } catch (Throwable e) {
        return "unknown"
    }
}

if (System.getenv("PROMOTED_NUMBER") != null)
    version += ".${System.getenv("PROMOTED_NUMBER")}"
else if (System.getenv("BUILD_NUMBER") != null)
    version += ".${System.getenv("BUILD_NUMBER")}"
else
    version += "+" + getGitRef()

ext.simpleVersion = version
version = "MC${config.minecraft.simpleversion}-Fabric-${project.version}"

minecraft {
    refmapName = "tis3d.refmap.json"
}

dependencies {
    minecraft config.minecraft.version
    mappings config.fabric.mappings
    modCompile config.fabric.loader

    // Fabric API. This is technically optional, but you probably want it anyway.
    modCompile config.fabric.api

    compile 'com.google.code.findbugs:jsr305:3.0.2'
}

processResources {
    inputs.property "version", project.simpleVersion
}

task apiJar(type: Jar) {
    from sourceSets.main.allSource
    from sourceSets.main.output
    classifier = 'api'
    include 'li/cil/tis3d/api/**'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier 'javadoc'
}

artifacts {
    archives javadocJar
    archives apiJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
            artifact javadocJar
            artifact apiJar
        }
    }
    repositories {
        maven {
            url System.getenv("MAVEN_PATH")
        }
    }
}

curseforge {
    apiKey = project.hasProperty("curseForgeApiKey") ? project.curseForgeApiKey : ""
    project {
        id = config.curse.project.id
        releaseType = config.curse.project.releaseType
        changelogType = "markdown"
        changelog = file("changelog.md")
        addGameVersion config.minecraft.simpleversion
        addGameVersion "Java 8"
        addGameVersion "Java 9"
        addGameVersion "Java 10"

        relations {
            requiredLibrary 'fabric'
        }
        mainArtifact(file("${project.buildDir}/libs/${archivesBaseName}-${version}.jar"))
        afterEvaluate {
            uploadTask.dependsOn(remapJar)
        }
    }
    options {
        forgeGradleIntegration = false
    }
}

// this is needed for IntelliJ so we don't have to copy over the assets manually every time
idea {
    module {
        outputDir = file('build/classes/main')
    }
}
